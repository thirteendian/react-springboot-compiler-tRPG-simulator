plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'antlr'
}
bootJar {
	enabled = false
}

jar {
	enabled = true
}

group = 'edu.duke.summer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {//boot
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.7'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.7'
	testImplementation 'org.mockito:mockito-inline:4.5.1'
	//data-JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.7'
	//Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.7'
	//PSQL
	annotationProcessor 'org.postgresql:postgresql:42.3.4'
	implementation("org.postgresql:postgresql:42.3.5")

	//MongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:2.7.2'


	//Spring Security
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.springframework.security:spring-security-core:5.6.2'
	implementation 'com.maxmind.geoip2:geoip2:3.0.1'
	antlr "org.antlr:antlr4:4.5"

	//data-Redis
	implementation "org.springframework.boot:spring-boot-starter-data-redis"
	//session-data-Redis
	implementation 'org.springframework.session:spring-session-data-redis'

	//Websocket
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars:sockjs-client:1.0.2'
	implementation 'org.webjars:stomp-websocket:2.3.3'
	implementation 'org.webjars:bootstrap:3.3.7'
	implementation 'org.webjars:jquery:3.1.1-1'
	implementation 'org.springframework:spring-messaging:5.3.20'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.6.7'
	//WebSecurity
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.0'
	//io.jsonwebtoken
	implementation 'io.jsonwebtoken:jjwt:0.9.1'


	//Cross Origin httpclient
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

}

tasks.named('test') {
	useJUnitPlatform()
}


test {
	testLogging {
		showStandardStreams = true
		exceptionFormat = 'full'
	}
}


// generate java from the ANTLR g4 files
generateGrammarSource {
	arguments = ['-visitor', '-package', 'edu.duke.summer.server.algorithm']
	outputDirectory = file("${project.buildDir}/generated-src/main/java/")
}

// copy the java code generated by ANTLR into a folder outside the build directory
// for the benefit of IntelliJ IDEA - make sure gen/main/java is marked as a generated
// sources folder
generateGrammarSource  {
	doLast {
		copy {
			from "${project.buildDir}/generated-src/main/java/"
			into "src/generated/java"
		}
	}
}

// make sure that ANTLR generates java before compiling the project
// include the generated java code in the compilation
compileJava.dependsOn generateGrammarSource
compileJava {
	source = ['build/generated-src/main/java', 'src/main/java/edu/duke/summer/server']
}

// when cleaning, remove the generated sources too
task removeGeneratedSource(type: Delete) {
	delete 'src/generated/'
}
clean.dependsOn removeGeneratedSource

// mark the generated source as such for IntelliJ IDEA
sourceSets.main.java.srcDirs += file("src/generated/java")
